{"version":3,"sources":["components/Geoman.js","components/Map.js","App.js","index.js"],"names":["Geoman","context","useLeafletContext","useEffect","leafletContainer","layerContainer","map","pm","addControls","drawMarker","setGlobalOptions","pmIgnore","on","e","layer","shape","console","log","enable","getShape","getGeomanLayers","bindPopup","openPopup","index","removeControls","Map","MapContainer","center","zoom","scrollWheelZoom","TileLayer","url","maxZoom","App","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mNAuDeA,G,YAlDA,WACb,IAAMC,EAAUC,cA8ChB,OA5CAC,qBAAU,WACR,IAAMC,EAAmBH,EAAQI,gBAAkBJ,EAAQK,IAqC3D,OAnCAF,EAAiBG,GAAGC,YAAY,CAC9BC,YAAY,IAGdL,EAAiBG,GAAGG,iBAAiB,CAAEC,UAAU,IAEjDP,EAAiBQ,GAAG,aAAa,SAACC,GAChC,GAAIA,EAAEC,OAASD,EAAEC,MAAMP,GAAI,CACzB,IAAMQ,EAAQF,EACdG,QAAQC,IAAIJ,GAGZE,EAAMD,MAAMP,GAAGW,SAEfF,QAAQC,IAAR,0BAA+BF,EAAMD,MAAMP,GAAGY,aAE9Cf,EAAiBG,GACda,iBAAgB,GAChBC,UAAU,cACVC,YACHlB,EAAiBG,GACda,kBACAd,KAAI,SAACQ,EAAOS,GAAR,OAAkBT,EAAMO,UAAN,4BAAkCE,GAApD,IACPR,EAAMD,MAAMF,GAAG,WAAW,SAACC,GAG1B,GACF,CACF,IAEDT,EAAiBQ,GAAG,aAAa,SAACC,GAChCG,QAAQC,IAAI,iBAEb,IAEM,WACLb,EAAiBG,GAAGiB,iBACpBpB,EAAiBG,GAAGG,iBAAiB,CAAEC,UAAU,GAClD,CACF,GAAE,CAACV,IAEG,IACR,G,OCtCcwB,EAZH,WAIV,OACE,eAACC,EAAA,EAAD,CAAcC,OAJC,CAAC,QAAS,WAIOC,KAHnB,GAGiCC,iBAAiB,EAA/D,UACE,cAACC,EAAA,EAAD,CAAWC,IAAI,0CAA0CC,QAAS,KAClE,cAAC,EAAD,MAGL,ECRc,SAASC,IACtB,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,KAGL,CCND,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACN,EAAD,MAEFE,E","file":"static/js/main.59b55515.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useLeafletContext } from \"@react-leaflet/core\";\r\nimport \"@geoman-io/leaflet-geoman-free\";\r\nimport \"@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css\";\r\n\r\nconst Geoman = () => {\r\n  const context = useLeafletContext();\r\n\r\n  useEffect(() => {\r\n    const leafletContainer = context.layerContainer || context.map;\r\n\r\n    leafletContainer.pm.addControls({\r\n      drawMarker: false\r\n    });\r\n\r\n    leafletContainer.pm.setGlobalOptions({ pmIgnore: false });\r\n\r\n    leafletContainer.on(\"pm:create\", (e) => {\r\n      if (e.layer && e.layer.pm) {\r\n        const shape = e;\r\n        console.log(e);\r\n\r\n        // enable editing of circle\r\n        shape.layer.pm.enable();\r\n\r\n        console.log(`object created: ${shape.layer.pm.getShape()}`);\r\n        // console.log(leafletContainer.pm.getGeomanLayers(true).toGeoJSON());\r\n        leafletContainer.pm\r\n          .getGeomanLayers(true)\r\n          .bindPopup(\"i am whole\")\r\n          .openPopup();\r\n        leafletContainer.pm\r\n          .getGeomanLayers()\r\n          .map((layer, index) => layer.bindPopup(`I am figure NÂ° ${index}`));\r\n        shape.layer.on(\"pm:edit\", (e) => {\r\n          const event = e;\r\n          // console.log(leafletContainer.pm.getGeomanLayers(true).toGeoJSON());\r\n        });\r\n      }\r\n    });\r\n\r\n    leafletContainer.on(\"pm:remove\", (e) => {\r\n      console.log(\"object removed\");\r\n      // console.log(leafletContainer.pm.getGeomanLayers(true).toGeoJSON());\r\n    });\r\n\r\n    return () => {\r\n      leafletContainer.pm.removeControls();\r\n      leafletContainer.pm.setGlobalOptions({ pmIgnore: true });\r\n    };\r\n  }, [context]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default Geoman;\r\n","import { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport Geoman from \"./Geoman\";\r\n\r\nconst Map = () => {\r\n  const position = [5.86599, 102.51228];\r\n  const zoomLv = 13;\r\n\r\n  return (\r\n    <MapContainer center={position} zoom={zoomLv} scrollWheelZoom={true}>\r\n      <TileLayer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" maxZoom={20} />\r\n      <Geoman />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import \"./styles.css\";\nimport \"leaflet/dist/leaflet.css\";\n\nimport Map from './components/Map'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Map />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}